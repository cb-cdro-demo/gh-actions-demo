name: Build and deploy
on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Run build
        run: npm run build

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push container
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/insurance-action:${{ github.sha }}

      - name: Kick off CD/RO application deploy
        if: github.event_name == 'pull_request'
        env:
          CDRO_URL: ${{ secrets.CDRO_SERVER }}
          CDRO_TOKEN: ${{ secrets.CDRO_TOKEN }}
        uses: cloudbees/cdro-actions/run-process@main
        with:
          projectName: ldonley Demo
          applicationName: Simple Insurance
          processName: Deploy Application 
          environmentName: Insurance QA
          actualParameter: |
            {imageTag: ${{ github.sha }} }

      - name: Create release from template
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          CDRO_URL: ${{ secrets.CDRO_SERVER }}
          CDRO_TOKEN: ${{ secrets.CDRO_TOKEN }}
        uses: cloudbees/cdro-actions/create-release-from-template@main
        with:
          templateProjectName: ldonley Demo
          templateCatalogName: LD Demo
          templateName: Simple Release
          actualParameter: |
              {releaseName: "Insurance Release ${{ github.sha }}", imageTag: "${{ github.sha }}"}

      - name: Run release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          CDRO_URL: ${{ secrets.CDRO_SERVER }}
          CDRO_TOKEN: ${{ secrets.CDRO_TOKEN }}
        uses: cloudbees/cdro-actions/start-release@main
        with:
          projectName: ldonley Demo
          releaseName: Insurance Release ${{ github.sha }}
